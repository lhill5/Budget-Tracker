{"ast":null,"code":"var _jsxFileName = \"/Users/landon/Documents/VS Code/Web Dev/Budget Tracker/bt_frontend/frontend/src/components/LineChart.js\";\nimport React from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport styles from \"../styles/Chart.module.css\";\nimport { Chart, registerables } from \"chart.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChart.register(...registerables);\nconst dateToString = date => {\n  var year = date.getFullYear();\n  var month = date.getMonth() + 1;\n  var date = date.getDate();\n  var time = month + \"/\" + date + \"/\" + year;\n  return time;\n};\nconst getDatesBetween = (start_date, end_date) => {\n  const date_arr = [];\n  for (let i = start_date; i <= end_date; i.setDate(i.getDate() + 1)) {\n    date_arr.push(dateToString(i));\n  }\n  return date_arr;\n};\nconst getRandomData = arr_len => {\n  let data_arr = [];\n  data_arr.push(Math.random() * 100);\n  for (let i = 1; i < arr_len; i++) {\n    let sign = Math.round(Math.random()) === 0 ? 1 : -1;\n    data_arr.push(data_arr[i - 1] + Math.random() * 100 * sign);\n  }\n  console.log(data_arr);\n  return data_arr;\n};\nconst label_arr = getDatesBetween(new Date(2023, 0, 1), new Date(2023, 2, 3));\nconst data_arr = getRandomData(label_arr.length);\nconst data = {\n  labels: label_arr,\n  datasets: [{\n    label: \"Net Worth Tracker\",\n    backgroundColor: \"rgb(255, 99, 132)\",\n    borderColor: \"rgb(255, 99, 132)\",\n    data: data_arr\n  }]\n};\nconst options = {\n  responsive: true,\n  maintainAspectRatio: false,\n  scales: {\n    y: {\n      ticks: {\n        color: \"white\"\n      }\n    },\n    x: {\n      ticks: {\n        color: \"white\"\n      }\n    }\n  },\n  plugins: {\n    legend: {\n      display: false,\n      labels: {\n        color: \"rgb(255, 99, 132)\"\n      },\n      position: \"right\",\n      align: \"center\"\n    }\n  }\n};\nconst LineChart = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.nw_chart,\n    children: /*#__PURE__*/_jsxDEV(Line, {\n      options: options,\n      data: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n};\n_c = LineChart;\nexport default LineChart;\nvar _c;\n$RefreshReg$(_c, \"LineChart\");","map":{"version":3,"names":["React","Line","styles","Chart","registerables","register","dateToString","date","year","getFullYear","month","getMonth","getDate","time","getDatesBetween","start_date","end_date","date_arr","i","setDate","push","getRandomData","arr_len","data_arr","Math","random","sign","round","console","log","label_arr","Date","length","data","labels","datasets","label","backgroundColor","borderColor","options","responsive","maintainAspectRatio","scales","y","ticks","color","x","plugins","legend","display","position","align","LineChart","nw_chart"],"sources":["/Users/landon/Documents/VS Code/Web Dev/Budget Tracker/bt_frontend/frontend/src/components/LineChart.js"],"sourcesContent":["import React from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport styles from \"../styles/Chart.module.css\";\nimport { Chart, registerables } from \"chart.js\";\n\nChart.register(...registerables);\n\nconst dateToString = (date) => {\n  var year = date.getFullYear();\n  var month = date.getMonth() + 1;\n  var date = date.getDate();\n  var time = month + \"/\" + date + \"/\" + year;\n  return time;\n};\n\nconst getDatesBetween = (start_date, end_date) => {\n  const date_arr = [];\n  for (let i = start_date; i <= end_date; i.setDate(i.getDate() + 1)) {\n    date_arr.push(dateToString(i));\n  }\n  return date_arr;\n};\n\nconst getRandomData = (arr_len) => {\n  let data_arr = [];\n\n  data_arr.push(Math.random() * 100);\n  for (let i = 1; i < arr_len; i++) {\n    let sign = Math.round(Math.random()) === 0 ? 1 : -1;\n    data_arr.push(data_arr[i - 1] + Math.random() * 100 * sign);\n  }\n  console.log(data_arr);\n  return data_arr;\n};\n\nconst label_arr = getDatesBetween(new Date(2023, 0, 1), new Date(2023, 2, 3));\nconst data_arr = getRandomData(label_arr.length);\nconst data = {\n  labels: label_arr,\n  datasets: [\n    {\n      label: \"Net Worth Tracker\",\n      backgroundColor: \"rgb(255, 99, 132)\",\n      borderColor: \"rgb(255, 99, 132)\",\n      data: data_arr,\n    },\n  ],\n};\n\nconst options = {\n  responsive: true,\n  maintainAspectRatio: false,\n  scales: {\n    y: {\n      ticks: { color: \"white\" },\n    },\n    x: {\n      ticks: { color: \"white\" },\n    },\n  },\n  plugins: {\n    legend: {\n      display: false,\n      labels: {\n        color: \"rgb(255, 99, 132)\",\n      },\n      position: \"right\",\n      align: \"center\",\n    },\n  },\n};\n\nconst LineChart = () => {\n  return (\n    <div className={styles.nw_chart}>\n      <Line options={options} data={data} />\n    </div>\n  );\n};\n\nexport default LineChart;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}