{"ast":null,"code":"var _jsxFileName = \"/Users/landon/Documents/VS Code/Web Dev/Budget Tracker/bt_frontend/frontend/src/components/NewAccountPopup.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport ReactDom from \"react-dom\";\nimport Input_field from \"./Input_field\";\nimport styles from \"../styles/NewAccountPopup.module.css\";\nimport classNames from \"classnames\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function NewAccountPopup(props) {\n  _s();\n  const [accounts, setAccounts] = useState([\"Discover Savings\", \"Roth IRA\"]);\n  const [category, setCategory] = useState(\"\");\n  const [formTypeState, setFormTypeState] = useState(\"\");\n  const [formState, setFormState] = useState({});\n  if (!props.displayNewAccount) return null;\n  const subcategories = {\n    Housing: [\"Mortgage\", \"Rent\", \"Home/renters insurance\", \"Utilities\", \"Maintenance\", \"Misc\"],\n    Transportation: [\"Gas\", \"Car payment\", \"Car insurance\", \"Rideshare\", \"Misc\"],\n    Food: [\"Groceries\", \"Restaurants/Take-out\", \"Misc\"],\n    Bills: [\"Electric\", \"Water\", \"Gas\", \"Misc\"],\n    Healthcare: [\"Medical\", \"Dental\", \"Prescription\", \"Misc\"],\n    Entertainment: [\"Hobby\", \"Games\", \"Travel\", \"Concerts\", \"Misc\"],\n    \"Personal care\": [\"Hygiene products\", \"Haircut\", \"Spa/Salon\", \"Misc\"],\n    Clothing: [\"Apparel\", \"Shoes\", \"Misc\"],\n    Education: [\"Tuition\", \"Books\", \"School Supplies\", \"Tutoring/Online Help\", \"Misc\"],\n    \"Charitable donations\": [\"Non-profit\", \"Religious\", \"Misc\"],\n    Savings: [\"IRA\", \"401k\", \"HRA/HSA\", \"529 Plan\", \"Bonds\", \"CDs\", \"Money-Market\", \"Mutual Funds\", \"ETFs\", \"Stocks\"],\n    Misc: []\n  };\n  const isEmpty = (obj, key) => key in obj ? !obj[key] : false;\n  const handleSubmit = event => {\n    event.preventDefault();\n    const form_data = new FormData(event.target);\n    let is_valid = true;\n    for (const [key, value] of form_data) {\n      setFormState(prevFormState => ({\n        ...prevFormState,\n        [key]: value\n      }));\n      if (!value && key != \"Description\") {\n        is_valid = false;\n      }\n    }\n    if (is_valid) {\n      props.onClose();\n    }\n  };\n  return /*#__PURE__*/ReactDom.createPortal( /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.PopupBackground\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)\n  }, void 0, false), document.getElementById(\"newAccountPortal\"));\n}\n_s(NewAccountPopup, \"0DqM1UfNCMXGdgX3aiaVMIjZrvg=\");\n_c = NewAccountPopup;\nvar _c;\n$RefreshReg$(_c, \"NewAccountPopup\");","map":{"version":3,"names":["React","useState","ReactDom","Input_field","styles","classNames","NewAccountPopup","props","accounts","setAccounts","category","setCategory","formTypeState","setFormTypeState","formState","setFormState","displayNewAccount","subcategories","Housing","Transportation","Food","Bills","Healthcare","Entertainment","Clothing","Education","Savings","Misc","isEmpty","obj","key","handleSubmit","event","preventDefault","form_data","FormData","target","is_valid","value","prevFormState","onClose","createPortal","PopupBackground","document","getElementById"],"sources":["/Users/landon/Documents/VS Code/Web Dev/Budget Tracker/bt_frontend/frontend/src/components/NewAccountPopup.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport ReactDom from \"react-dom\";\n\nimport Input_field from \"./Input_field\";\nimport styles from \"../styles/NewAccountPopup.module.css\";\nimport classNames from \"classnames\";\n\nexport default function NewAccountPopup(props) {\n  const [accounts, setAccounts] = useState([\"Discover Savings\", \"Roth IRA\"]);\n  const [category, setCategory] = useState(\"\");\n  const [formTypeState, setFormTypeState] = useState(\"\");\n  const [formState, setFormState] = useState({});\n\n  if (!props.displayNewAccount) return null;\n\n  const subcategories = {\n    Housing: [\n      \"Mortgage\",\n      \"Rent\",\n      \"Home/renters insurance\",\n      \"Utilities\",\n      \"Maintenance\",\n      \"Misc\",\n    ],\n    Transportation: [\n      \"Gas\",\n      \"Car payment\",\n      \"Car insurance\",\n      \"Rideshare\",\n      \"Misc\",\n    ],\n    Food: [\"Groceries\", \"Restaurants/Take-out\", \"Misc\"],\n    Bills: [\"Electric\", \"Water\", \"Gas\", \"Misc\"],\n    Healthcare: [\"Medical\", \"Dental\", \"Prescription\", \"Misc\"],\n    Entertainment: [\"Hobby\", \"Games\", \"Travel\", \"Concerts\", \"Misc\"],\n    \"Personal care\": [\"Hygiene products\", \"Haircut\", \"Spa/Salon\", \"Misc\"],\n    Clothing: [\"Apparel\", \"Shoes\", \"Misc\"],\n    Education: [\n      \"Tuition\",\n      \"Books\",\n      \"School Supplies\",\n      \"Tutoring/Online Help\",\n      \"Misc\",\n    ],\n    \"Charitable donations\": [\"Non-profit\", \"Religious\", \"Misc\"],\n    Savings: [\n      \"IRA\",\n      \"401k\",\n      \"HRA/HSA\",\n      \"529 Plan\",\n      \"Bonds\",\n      \"CDs\",\n      \"Money-Market\",\n      \"Mutual Funds\",\n      \"ETFs\",\n      \"Stocks\",\n    ],\n    Misc: [],\n  };\n\n  const isEmpty = (obj, key) => (key in obj ? !obj[key] : false);\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    const form_data = new FormData(event.target);\n\n    let is_valid = true;\n    for (const [key, value] of form_data) {\n      setFormState((prevFormState) => ({\n        ...prevFormState,\n        [key]: value,\n      }));\n\n      if (!value && key != \"Description\") {\n        is_valid = false;\n      }\n    }\n\n    if (is_valid) {\n      props.onClose();\n    }\n  };\n\n  return ReactDom.createPortal(\n    <>\n      <div className={styles.PopupBackground}></div>\n      {/* <div className={styles.TXNPopup}>\n        <h1>New Transaction</h1>\n        <button className={styles[\"close-btn\"]} onClick={props.onClose}>\n          x\n        </button>\n        <hr />\n        <form\n          className={styles.new_txn_form}\n          id=\"new_txn_form\"\n          onSubmit={handleSubmit}\n        >\n          <div>\n            <label>*Account: </label>\n            <select\n              name=\"Account\"\n              id=\"Account\"\n              className={classNames({\n                [styles.red_border]: isEmpty(formState, \"Account\"),\n              })}\n            >\n              <option isdisabled=\"true\" value=\"\">\n                -- select an option --\n              </option>\n              {accounts.map((item) => (\n                <option value={item}>{item}</option>\n              ))}\n            </select>\n          </div>\n          <div>\n            <label>*Transaction Type: </label>\n            <select\n              name=\"Type\"\n              id=\"Type\"\n              className={classNames({\n                [styles.red_border]: isEmpty(formState, \"Type\"),\n              })}\n              onChange={(el) => setFormTypeState(el.target.value)}\n            >\n              <option isdisabled=\"true\" value=\"\">\n                -- select an option --\n              </option>\n              <option value=\"Income\">Income</option>\n              <option value=\"Expense\">Expense</option>\n              <option value=\"Transfer\">Transfer</option>\n              <option value=\"Refund\">Refund</option>\n              <option value=\"Investment\">Investment</option>\n            </select>\n          </div>\n          <div>\n            <label>*Amount: </label>\n            <input\n              name=\"Amount\"\n              id=\"Amount\"\n              type=\"number\"\n              step=\"any\"\n              placeholder=\"enter amount\"\n              className={classNames({\n                [styles.red_border]: isEmpty(formState, \"Amount\"),\n              })}\n            ></input>\n          </div>\n\n          {formTypeState === \"Expense\" ? (\n            <div>\n              <label>*Category: </label>\n              <select\n                name=\"Category\"\n                id=\"Category\"\n                onChange={(e) => {\n                  setCategory(e.target.value);\n                }}\n                className={classNames({\n                  [styles.red_border]: isEmpty(formState, \"Category\"),\n                })}\n              >\n                <option isdisabled=\"true\" value=\"\">\n                  -- select an option --\n                </option>\n                <option value=\"Housing\">Housing</option>\n                <option value=\"Transportation\">Transportation</option>\n                <option value=\"Food\">Food</option>\n                <option value=\"Bills\">Bills</option>\n                <option value=\"Healthcare\">Healthcare</option>\n                <option value=\"Entertainment\">Entertainment</option>\n                <option value=\"Personal care\">Personal care</option>\n                <option value=\"Clothing\">Clothing</option>\n                <option value=\"Education\">Education</option>\n                <option value=\"Charitable donations\">\n                  Charitable donations\n                </option>\n                <option value=\"Savings\">Savings</option>\n                <option value=\"Misc\">Misc</option>\n              </select>\n            </div>\n          ) : null}\n\n          {formTypeState === \"Expense\" ? (\n            <div>\n              <label>*Subcategory: </label>\n              <select\n                name=\"Subcategory\"\n                id=\"Subcategory\"\n                className={classNames({\n                  [styles.red_border]: isEmpty(formState, \"SubCategory\"),\n                })}\n              >\n                <option isdisabled=\"true\" value=\"\">\n                  -- select an option --\n                </option>\n                {category !== \"\" &&\n                  subcategories[category].map((item) => (\n                    <option value={item}>{item}</option>\n                  ))}\n              </select>\n            </div>\n          ) : null}\n\n          <div>\n            <label>Description (optional): </label>\n            <input name=\"Description\" id=\"Description\" type=\"text\"></input>\n          </div>\n\n          <div>\n            <button type=\"submit\">Submit</button>\n          </div>\n        </form>\n      </div> */}\n    </>,\n    document.getElementById(\"newAccountPortal\")\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}