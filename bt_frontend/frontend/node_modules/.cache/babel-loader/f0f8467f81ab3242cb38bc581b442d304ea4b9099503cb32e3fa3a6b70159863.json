{"ast":null,"code":"var _jsxFileName = \"/Users/landon/Documents/VS Code/Web Dev/Budget Tracker/bt_frontend/frontend/src/components/LineChart.js\";\n// import React from \"react\";\n// import { Line } from \"react-chartjs-2\";\n// import styles from \"../styles/Chart.module.css\";\n// import { Chart, registerables } from \"chart.js\";\n\n// Chart.register(...registerables);\n\n// const dateToString = (date) => {\n//   var year = date.getFullYear();\n//   var month = date.getMonth() + 1;\n//   var date = date.getDate();\n//   var time = month + \"/\" + date + \"/\" + year;\n//   return time;\n// };\n\n// const getDatesBetween = (start_date, end_date) => {\n//   const date_arr = [];\n//   for (let i = start_date; i <= end_date; i.setDate(i.getDate() + 1)) {\n//     date_arr.push(dateToString(i));\n//   }\n//   return date_arr;\n// };\n\n// const getRandomData = (arr_len) => {\n//   let data_arr = [];\n\n//   data_arr.push(Math.random() * 100);\n//   for (let i = 1; i < arr_len; i++) {\n//     let sign = Math.round(Math.random()) === 0 ? 1 : -1;\n//     data_arr.push(data_arr[i - 1] + Math.random() * 100 * sign);\n//   }\n//   return data_arr;\n// };\n\n// const label_arr = [\n//   \"2022-01-01\",\n//   \"2022-02-01\",\n//   \"2022-03-01\",\n//   \"2022-04-01\",\n//   \"2022-05-01\",\n//   \"2022-06-01\",\n//   \"2022-07-01\",\n//   \"2022-08-01\",\n//   \"2022-09-01\",\n//   \"2022-10-01\",\n//   \"2022-11-01\",\n//   \"2022-12-01\",\n// ];\n\n// //getDatesBetween(new Date(2023, 0, 1), new Date(2023, 2, 3));\n// const data_arr = [12, 131, 15, 27, 10, 5, 31, 0, 9, 84, 88, 23];\n\n// //getRandomData(label_arr.length);\n\n// const data = {\n//   labels: label_arr,\n//   datasets: [\n//     {\n//       label: \"Net Worth Tracker\",\n//       backgroundColor: \"rgb(255, 99, 132)\",\n//       borderColor: \"rgb(255, 99, 132)\",\n//       data: data_arr,\n//     },\n//   ],\n// };\n\n// const options = {\n//   responsive: true,\n//   maintainAspectRatio: false,\n//   scales: {\n//     y: {\n//       // ticks: { color: \"white\" },\n//       beginAtZero: true,\n//     },\n//     x: {\n//       ticks: { color: \"white\" },\n//     },\n//   },\n//   plugins: {\n//     legend: {\n//       display: false,\n//       // labels: {\n//       //   color: \"rgb(255, 99, 132)\",\n//       // },\n//       // position: \"right\",\n//       // align: \"center\",\n//     },\n//   },\n// };\n\n// const LineChart = () => {\n//   return (\n//     <div className={styles.nw_chart}>\n//       <Line options={options} data={data} />\n//     </div>\n//   );\n// };\n// export default LineChart;\n\nimport styles from \"../styles/Chart.module.css\";\nimport { Chart as chartJS, LineElement, TimeScale, LinearScale, PointElement, Tooltip, Legend } from \"chart.js\";\nimport \"chartjs-adapter-date-fns\";\nimport { Line } from \"react-chartjs-2\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nchartJS.register(LineElement, TimeScale, LinearScale, PointElement, Tooltip, Legend);\nconst dateToString = date => {\n  var year = date.getFullYear();\n  var month = date.getMonth() + 1;\n  var date = date.getDate();\n  var time = year + \"-\" + month + \"-\" + (date < 10 ? \"0\" : \"\") + date;\n  return time;\n};\nconst getDatesBetween = (start_date, end_date) => {\n  const date_arr = [];\n  for (let i = start_date; i <= end_date; i.setDate(i.getDate() + 1)) {\n    date_arr.push(dateToString(i));\n  }\n  return date_arr;\n};\nconst getRandomData = arr_len => {\n  let data_arr = [];\n  data_arr.push(Math.random() * 10);\n  for (let i = 1; i < arr_len; i++) {\n    let sign = Math.round(Math.random()) === 0 ? 1 : -1;\n    data_arr.push(data_arr[i - 1] + Math.random() * 10 * sign);\n    // data_arr.push(1);\n  }\n\n  return data_arr;\n};\nconst label_arr = getDatesBetween(new Date(2023, 8, 1), new Date(2023, 11, 4));\nconst data_arr = getRandomData(label_arr.length);\nconsole.log(label_arr);\nconsole.log(data_arr);\nconst data = {\n  labels: label_arr,\n  datasets: [{\n    // label: \"369\",\n    data: data_arr,\n    backgroundColor: \"white\",\n    borderColor: \"white\",\n    tension: 0.4\n  }]\n};\nconst options = {\n  responsive: true,\n  maintainAspectRatio: false,\n  layout: {\n    padding: {\n      // bottom: 5,\n      // left: 5,\n    }\n  },\n  scales: {\n    x: {\n      type: \"time\",\n      time: {\n        // unit: \"day\",\n      }\n    }\n    // y: {\n    //   beginAtZero: true,\n    // },\n  },\n\n  plugins: {\n    legend: {\n      display: false\n      // labels: {\n      //   color: \"rgb(255, 99, 132)\",\n      // },\n      // position: \"right\",\n      // align: \"center\",\n    }\n  }\n};\n\nconst LineChart = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles[\"nw-chart\"],\n    children: /*#__PURE__*/_jsxDEV(Line, {\n      options: options,\n      data: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 204,\n    columnNumber: 5\n  }, this);\n};\n_c = LineChart;\nexport default LineChart;\nvar _c;\n$RefreshReg$(_c, \"LineChart\");","map":{"version":3,"names":["styles","Chart","chartJS","LineElement","TimeScale","LinearScale","PointElement","Tooltip","Legend","Line","register","dateToString","date","year","getFullYear","month","getMonth","getDate","time","getDatesBetween","start_date","end_date","date_arr","i","setDate","push","getRandomData","arr_len","data_arr","Math","random","sign","round","label_arr","Date","length","console","log","data","labels","datasets","backgroundColor","borderColor","tension","options","responsive","maintainAspectRatio","layout","padding","scales","x","type","plugins","legend","display","LineChart"],"sources":["/Users/landon/Documents/VS Code/Web Dev/Budget Tracker/bt_frontend/frontend/src/components/LineChart.js"],"sourcesContent":["// import React from \"react\";\n// import { Line } from \"react-chartjs-2\";\n// import styles from \"../styles/Chart.module.css\";\n// import { Chart, registerables } from \"chart.js\";\n\n// Chart.register(...registerables);\n\n// const dateToString = (date) => {\n//   var year = date.getFullYear();\n//   var month = date.getMonth() + 1;\n//   var date = date.getDate();\n//   var time = month + \"/\" + date + \"/\" + year;\n//   return time;\n// };\n\n// const getDatesBetween = (start_date, end_date) => {\n//   const date_arr = [];\n//   for (let i = start_date; i <= end_date; i.setDate(i.getDate() + 1)) {\n//     date_arr.push(dateToString(i));\n//   }\n//   return date_arr;\n// };\n\n// const getRandomData = (arr_len) => {\n//   let data_arr = [];\n\n//   data_arr.push(Math.random() * 100);\n//   for (let i = 1; i < arr_len; i++) {\n//     let sign = Math.round(Math.random()) === 0 ? 1 : -1;\n//     data_arr.push(data_arr[i - 1] + Math.random() * 100 * sign);\n//   }\n//   return data_arr;\n// };\n\n// const label_arr = [\n//   \"2022-01-01\",\n//   \"2022-02-01\",\n//   \"2022-03-01\",\n//   \"2022-04-01\",\n//   \"2022-05-01\",\n//   \"2022-06-01\",\n//   \"2022-07-01\",\n//   \"2022-08-01\",\n//   \"2022-09-01\",\n//   \"2022-10-01\",\n//   \"2022-11-01\",\n//   \"2022-12-01\",\n// ];\n\n// //getDatesBetween(new Date(2023, 0, 1), new Date(2023, 2, 3));\n// const data_arr = [12, 131, 15, 27, 10, 5, 31, 0, 9, 84, 88, 23];\n\n// //getRandomData(label_arr.length);\n\n// const data = {\n//   labels: label_arr,\n//   datasets: [\n//     {\n//       label: \"Net Worth Tracker\",\n//       backgroundColor: \"rgb(255, 99, 132)\",\n//       borderColor: \"rgb(255, 99, 132)\",\n//       data: data_arr,\n//     },\n//   ],\n// };\n\n// const options = {\n//   responsive: true,\n//   maintainAspectRatio: false,\n//   scales: {\n//     y: {\n//       // ticks: { color: \"white\" },\n//       beginAtZero: true,\n//     },\n//     x: {\n//       ticks: { color: \"white\" },\n//     },\n//   },\n//   plugins: {\n//     legend: {\n//       display: false,\n//       // labels: {\n//       //   color: \"rgb(255, 99, 132)\",\n//       // },\n//       // position: \"right\",\n//       // align: \"center\",\n//     },\n//   },\n// };\n\n// const LineChart = () => {\n//   return (\n//     <div className={styles.nw_chart}>\n//       <Line options={options} data={data} />\n//     </div>\n//   );\n// };\n// export default LineChart;\n\nimport styles from \"../styles/Chart.module.css\";\n\nimport {\n  Chart as chartJS,\n  LineElement,\n  TimeScale,\n  LinearScale,\n  PointElement,\n  Tooltip,\n  Legend,\n} from \"chart.js\";\n\nimport \"chartjs-adapter-date-fns\";\nimport { Line } from \"react-chartjs-2\";\n\nchartJS.register(\n  LineElement,\n  TimeScale,\n  LinearScale,\n  PointElement,\n  Tooltip,\n  Legend\n);\n\nconst dateToString = (date) => {\n  var year = date.getFullYear();\n  var month = date.getMonth() + 1;\n  var date = date.getDate();\n  var time = year + \"-\" + month + \"-\" + (date < 10 ? \"0\" : \"\") + date;\n  return time;\n};\n\nconst getDatesBetween = (start_date, end_date) => {\n  const date_arr = [];\n  for (let i = start_date; i <= end_date; i.setDate(i.getDate() + 1)) {\n    date_arr.push(dateToString(i));\n  }\n  return date_arr;\n};\n\nconst getRandomData = (arr_len) => {\n  let data_arr = [];\n\n  data_arr.push(Math.random() * 10);\n  for (let i = 1; i < arr_len; i++) {\n    let sign = Math.round(Math.random()) === 0 ? 1 : -1;\n    data_arr.push(data_arr[i - 1] + Math.random() * 10 * sign);\n    // data_arr.push(1);\n  }\n  return data_arr;\n};\n\nconst label_arr = getDatesBetween(new Date(2023, 8, 1), new Date(2023, 11, 4));\nconst data_arr = getRandomData(label_arr.length);\nconsole.log(label_arr);\nconsole.log(data_arr);\n\nconst data = {\n  labels: label_arr,\n  datasets: [\n    {\n      // label: \"369\",\n      data: data_arr,\n      backgroundColor: \"white\",\n      borderColor: \"white\",\n      tension: 0.4,\n    },\n  ],\n};\n\nconst options = {\n  responsive: true,\n  maintainAspectRatio: false,\n  layout: {\n    padding: {\n      // bottom: 5,\n      // left: 5,\n    },\n  },\n  scales: {\n    x: {\n      type: \"time\",\n      time: {\n        // unit: \"day\",\n      },\n    },\n    // y: {\n    //   beginAtZero: true,\n    // },\n  },\n  plugins: {\n    legend: {\n      display: false,\n      // labels: {\n      //   color: \"rgb(255, 99, 132)\",\n      // },\n      // position: \"right\",\n      // align: \"center\",\n    },\n  },\n};\n\nconst LineChart = () => {\n  return (\n    <div className={styles[\"nw-chart\"]}>\n      <Line options={options} data={data} />\n    </div>\n  );\n};\n\nexport default LineChart;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}