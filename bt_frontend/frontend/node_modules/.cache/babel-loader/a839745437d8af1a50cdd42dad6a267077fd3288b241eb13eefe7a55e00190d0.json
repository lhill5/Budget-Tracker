{"ast":null,"code":"var _jsxFileName = \"/Users/landon/Documents/VS Code/Web Dev/Budget Tracker/bt_frontend/frontend/src/components/LineChart.js\";\nimport React from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LineChart = () => {\n  const data = {\n    labels: [\"2022-01-01\", \"2022-01-02\", \"2022-01-03\", \"2022-01-04\", \"2022-01-05\", \"2022-01-06\", \"2022-01-07\", \"2022-01-08\", \"2022-01-09\", \"2022-01-10\"\n    // and so on, for all the days in the date range\n    ],\n\n    datasets: [{\n      label: \"Sales\",\n      data: [500, 450, 600, 700, 800, 900, 1200, 1300, 1100, 1000],\n      borderColor: \"rgb(255, 99, 132)\",\n      fill: false\n    }]\n  };\n  const options = {\n    scales: {\n      x: {\n        type: \"time\",\n        time: {\n          unit: \"day\",\n          displayFormats: {\n            day: \"MMM D\"\n          }\n        }\n      },\n      y: {\n        beginAtZero: true\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Line, {\n    data: data,\n    options: options\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 10\n  }, this);\n};\n_c = LineChart;\nexport default LineChart;\nvar _c;\n$RefreshReg$(_c, \"LineChart\");","map":{"version":3,"names":["React","Line","LineChart","data","labels","datasets","label","borderColor","fill","options","scales","x","type","time","unit","displayFormats","day","y","beginAtZero"],"sources":["/Users/landon/Documents/VS Code/Web Dev/Budget Tracker/bt_frontend/frontend/src/components/LineChart.js"],"sourcesContent":["import React from \"react\";\nimport { Line } from \"react-chartjs-2\";\n\nconst LineChart = () => {\n  const data = {\n    labels: [\n      \"2022-01-01\",\n      \"2022-01-02\",\n      \"2022-01-03\",\n      \"2022-01-04\",\n      \"2022-01-05\",\n      \"2022-01-06\",\n      \"2022-01-07\",\n      \"2022-01-08\",\n      \"2022-01-09\",\n      \"2022-01-10\",\n      // and so on, for all the days in the date range\n    ],\n    datasets: [\n      {\n        label: \"Sales\",\n        data: [500, 450, 600, 700, 800, 900, 1200, 1300, 1100, 1000],\n        borderColor: \"rgb(255, 99, 132)\",\n        fill: false,\n      },\n    ],\n  };\n\n  const options = {\n    scales: {\n      x: {\n        type: \"time\",\n        time: {\n          unit: \"day\",\n          displayFormats: {\n            day: \"MMM D\",\n          },\n        },\n      },\n      y: {\n        beginAtZero: true,\n      },\n    },\n  };\n\n  return <Line data={data} options={options} />;\n};\n\nexport default LineChart;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,QAAQ,iBAAiB;AAAC;AAEvC,MAAMC,SAAS,GAAG,MAAM;EACtB,MAAMC,IAAI,GAAG;IACXC,MAAM,EAAE,CACN,YAAY,EACZ,YAAY,EACZ,YAAY,EACZ,YAAY,EACZ,YAAY,EACZ,YAAY,EACZ,YAAY,EACZ,YAAY,EACZ,YAAY,EACZ;IACA;IAAA,CACD;;IACDC,QAAQ,EAAE,CACR;MACEC,KAAK,EAAE,OAAO;MACdH,IAAI,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC;MAC5DI,WAAW,EAAE,mBAAmB;MAChCC,IAAI,EAAE;IACR,CAAC;EAEL,CAAC;EAED,MAAMC,OAAO,GAAG;IACdC,MAAM,EAAE;MACNC,CAAC,EAAE;QACDC,IAAI,EAAE,MAAM;QACZC,IAAI,EAAE;UACJC,IAAI,EAAE,KAAK;UACXC,cAAc,EAAE;YACdC,GAAG,EAAE;UACP;QACF;MACF,CAAC;MACDC,CAAC,EAAE;QACDC,WAAW,EAAE;MACf;IACF;EACF,CAAC;EAED,oBAAO,QAAC,IAAI;IAAC,IAAI,EAAEf,IAAK;IAAC,OAAO,EAAEM;EAAQ;IAAA;IAAA;IAAA;EAAA,QAAG;AAC/C,CAAC;AAAC,KA3CIP,SAAS;AA6Cf,eAAeA,SAAS;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}